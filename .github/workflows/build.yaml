name: Build and Publish

on:
  push:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      PROJECT_NAME: 'kop'
      IMAGE_NAME: 'bot'
      GOOGLE_APPLICATION_CREDENTIALS: ${{ vars.GOOGLE_APPLICATION_CREDENTIALS }}
      GOOGLE_PROJECT: ${{ vars.GOOGLE_PROJECT }}
      CLUSTER_NAME: ${{ vars.CLUSTER_NAME }}
      CLUSTER_REGION: ${{ vars.CLUSTER_REGION }}
      CLIENT_ID: ${{ vars.CLIENT_ID }}
      CLIENT_SECRET: ${{ vars.CLIENT_SECRET }}
      TOKEN: ${{ vars.TOKEN }}
      MONGODB_URI: ${{ vars.MONGODB_URI }}
      PIX_API_URL: ${{ vars.PIX_API_URL }}
      PIX_TOKEN: ${{ vars.PIX_TOKEN }}
      SERVER_MANAGER_URL: ${{ vars.SERVER_MANAGER_URL }}
      SERVER_MANAGER_TOKEN: ${{ vars.SERVER_MANAGER_TOKEN }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - id: 'auth'
        uses: 'google-github-actions/auth@v2'
        with:
          credentials_json: ${{ vars.GOOGLE_APPLICATION_CREDENTIALS }}

      - name: install the gcloud cli
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ vars.GOOGLE_PROJECT }}
          install_components: 'gke-gcloud-auth-plugin'

      - name: build and push the docker image
        run: |
          gcloud auth configure-docker us-central1-docker.pkg.dev
          docker build -t us-central1-docker.pkg.dev/$GOOGLE_PROJECT/$PROJECT_NAME/$IMAGE_NAME .
          docker push us-central1-docker.pkg.dev/$GOOGLE_PROJECT/$PROJECT_NAME/$IMAGE_NAME

      - name: deploy to GKE
        run: |
          gcloud container clusters get-credentials $CLUSTER_NAME --region $CLUSTER_REGION
          sed -i "s|PROJECT_NAME|$PROJECT_NAME|g" resources.yaml
          sed -i "s|IMAGE_NAME|$IMAGE_NAME|g" resources.yaml
          sed -i "s|GOOGLE_PROJECT|$GOOGLE_PROJECT|g" resources.yaml
          sed -i "s|ENV_CLIENT_ID|$CLIENT_ID|g" resources.yaml
          sed -i "s|ENV_CLIENT_SECRET|$CLIENT_SECRET|g" resources.yaml
          sed -i "s|ENV_TOKEN|$TOKEN|g" resources.yaml
          sed -i "s|ENV_MONGODB_URI|$MONGODB_URI|g" resources.yaml
          sed -i "s|ENV_PIX_API_URL|$PIX_API_URL|g" resources.yaml
          sed -i "s|ENV_PIX_TOKEN|$PIX_TOKEN|g" resources.yaml
          sed -i "s|ENV_SERVER_MANAGER_URL|$SERVER_MANAGER_URL|g" resources.yaml
          sed -i "s|ENV_SERVER_MANAGER_TOKEN|$SERVER_MANAGER_TOKEN|g" resources.yaml
          kubectl apply --record -f resources.yaml

      - name: run a redepoly on the workload
        run: |
          kubectl rollout restart deployment $PROJECT_NAME
